trigger:
- main

resources:
- repo: self

variables:
  imageRepository: 'elywen/simplon'
  imageName: 'voting'
  dockerfilePath: './Dockerfile'
  kubernetesServiceEndpoint: 'KlusterLunaConnection'
  canaryTag: 'canary'

# Build the docker image
stages:
- stage: Build
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push to DockerHub'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHubConnection'
        repository: 'elywen/simplon'
        command: 'buildAndPush'
        Dockerfile: './Dockerfile'
        tags: 'latest'

# Deploy to QA
- stage: DeployQA
  dependsOn: Build
  jobs:
  - job: DeployToQA
    displayName: 'Deploy to QA'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Kubernetes@1
      displayName: Deploy to QA
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: '$(kubernetesServiceEndpoint)'
        namespace: 'qa'
        command: 'apply'
        arguments: '-f ./k8s/deployment.yaml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Container Registry'
        dockerRegistryEndpoint: 'DockerHubConnection'

# Security Trivy
- stage: TrivyScanSec
  dependsOn: DeployQA
  jobs:
  - job: TrivyScan
    displayName: 'Run Trivy Scan'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: 'Run Trivy container'
      inputs:
        command: 'run aquasec/trivy'
        containerRegistry: 'DockerHubConnection'
        repository: 'aquasec/trivy'
        tag: 'latest'
        containerCommand: 'trivy --exit-code 1 --no-progress $(acrRegistry)/$(acrRepository):$(Build.BuildNumber)'
      env:
        acrRegistry: 'elywen'
        acrRepository: 'simplon'

# Test QA service
- stage: TestQA
  dependsOn: TrivyScanSec
  jobs:
  - job: TestQAService
    displayName: 'Test QA Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        curl https://kittyqa.simplon-ely.space/
      displayName: Test QA Service with curl

# Deploy Prod
- stage: DeployProd
  dependsOn: TestQA
  jobs:
  - job: CanaryDeploy
    displayName: 'Canary Deploy to Prod'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Kubernetes@1
      displayName: Canary Deploy to Prod
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: '$(kubernetesServiceEndpoint)'
        namespace: 'prod'
        command: 'apply'
        arguments: '-f ./k8s/deployment-canary.yaml'

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'KlusterLunaConnection'
        namespace: 'prod'
        command: 'login'

    - task: Bash@3
      inputs:
        filePath: './testcanary.sh'

    - task: Kubernetes@1
      displayName: Promote Canary Deployment to Prod
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: '$(kubernetesServiceEndpoint)'
        namespace: 'prod'
        command: 'apply'
        arguments: '-f ./k8s/deployment.yaml'

# testing Prod Service post canary
- stage: TestProd
  dependsOn: DeployProd
  jobs:
  - job: TestProdService
    displayName: 'Test Prod Service'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: |
        curl https://kitty.simplon-ely.space/
      displayName: Test Prod Service with curl

# Delete Canary
- stage: DeleteCanary
  dependsOn: TestProd
  jobs:
  - job: DeleteCanaryDeploy
    displayName: 'Deletion of Canary Deployment'
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'KlusterLunaConnection'
        namespace: 'prod'
        command: 'delete'
        arguments: 'deployment alfred-voteapp-canary -n prod'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'

# Signout
- stage: SignOut
  jobs:
    - job: SigningOut
      displayName: 'Elywen Signing Out'
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: CmdLine@2
        inputs:
          script: |
            echo Thank you for using my Pipeline.
            echo
            echo Elywen is wishing you the best possible day !